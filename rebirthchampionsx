getgenv().SecureMode = true

repeat wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

Rayfield:Notify({
    Title = "Kylee's Hub",
    Content = "Loading",
    Image = 4838075912,
    Duration = 0.5 
})

local Window = Rayfield:CreateWindow({
    Name = "Kylee Hub ",
    LoadingTitle = "Kylee's Hub",
    LoadingSubtitle = "By Kylee",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = Kylee, 
       FileName = "Key"
    },
    Discord = {
       Enabled = false,
       Invite = "", 
       RememberJoins = false
    },
    KeySystem = false, 
    KeySettings = {
       Title = "",
       Subtitle = "",
       Note = "",
       FileName = "Key",
       SaveKey = true,
       GrabKeyFromSite = "false", 
       Key = ""
    }
 })

local Tab = Window:CreateTab("100M Event!", 7657243214) 

local Tab2 = Window:CreateTab("Farming", 5564652358) 

local Tab3 = Window:CreateTab("Eggs", 1091212650) 

local Tab4 = Window:CreateTab("Misc", 11756695764) 

local Tab5 = Window:CreateTab("Info", 5128872300) 

local EventInfo = Tab:CreateSection("100M Event!")


local CollectCupcakes = Tab:CreateToggle({
    Name = "Auto Collect Cupcakes",
    CurrentValue = false,
    Flag = "AutoCollect", 
    Callback = function(Value)
      getgenv().CollectCupcakes = Value
          while getgenv().CollectCupcakes do
          wait(0.2)
          for i,v in pairs(game:GetService("Workspace").Scripts.CollectCupcakes.Storage:GetDescendants()) do
            if (v.Name == "TouchInterest" and v.Parent) then
            firetouchinterest(game.Players.LocalPlayer.Character.Head, v.Parent, 0)
            wait()
            break;
           end
          end 
          end
    end,
  })

  local EventUpgrader = Tab:CreateSection("Event Upgrader!")

  function upgrade(option)
    local args = {
        [1] = option,
        [2] = "100m",
    }
  game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(unpack(args))
    end

    local eventupgraders;
    local eventupgrader = Tab:CreateDropdown({
      Name = "Event Upgrader Option",
      Options = {"Click Multiplier", "Bank Space", "+1 Pet Equip", "Hatch Speed", "Gems Multiplier", "Luck Multiplier", "Cupcakes Multiplier"},
      CurrentOption = "Select Event Upgrader",
      Flag = "Event Upgrade",
      Callback = function(Option)
       if Option == "Click Multiplier" then
        eventupgraders = "ClickMultiplier";
       elseif Option == "Bank Space" then
        eventupgraders = "BankSlots";
       elseif Option == "+1 Pet Equip" then
        eventupgraders = "PetEquip";
       elseif Option == "Hatch Speed" then
        eventupgraders = "HatchSpeed";
       elseif Option == "Luck Multiplier" then
        eventupgraders = "LuckMultiplier";
       elseif Option == "Cupcakes Multiplier" then
        eventupgraders = "CupcakesMultiplier";
        end
       end,
    })	
  
  local EventUpgradeWarn = Tab:CreateLabel("Must Set Event Upgrader Option First")
  
    local EventUpgrader = Tab:CreateToggle({
       Name = "Enable Event Upgrader",	
       CurrentValue = false,
       Flag = "EventUpgrader",
       Callback = function(Value)
           getgenv().EventUpgrader = Value 
     while getgenv().EventUpgrader == true do wait(1)
       upgrade(eventupgraders)
             end
         end	    
     })

local ToggleAuto = Tab2:CreateToggle({
  Name = "Auto Click",
  CurrentValue = false,
  Flag = "AutoClick", 
  Callback = function(Value)
    getgenv().Toggle = Value
        while getgenv().Toggle do
        wait()
        game:GetService("ReplicatedStorage").Events.Click3:FireServer()
        end
  end,
})


spawn(function()
    function rebirth(amount)
        local args = {
            [1] = amount
        }
        game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
        end
end)

local ToggleHighest = Tab2:CreateToggle({
  Name = "Auto Rebirth Highest Unlocked",
  CurrentValue = false,
  Flag = "AutoRebirthHighest", 
  Callback = function(Value)
      getgenv().autorebirth = Value 
      while getgenv().autorebirth == true do 
    wait()
rebirth(game:GetService("Players").LocalPlayer.Upgrades.RebirthButtons.Value)
      end
  end,
})

local RebirthStatus = Tab2:CreateLabel(game:GetService("Players").LocalPlayer.Upgrades.RebirthButtons.Value)

spawn(function()
    while true do wait()
    RebirthStatus:Set("Rebirth Buttons Unlocked : " .. game:GetService("Players").LocalPlayer.Upgrades.RebirthButtons.Value)
    end
    end)
    


local Craft = Tab3:CreateToggle({
      Name = "Auto Craft",
      CurrentValue = false,
      Flag = "Auto Craft",
      Callback = function(Value)
      getgenv().autoCraft = Value
    while getgenv().autoCraft == true do
      wait()
      game:GetService("ReplicatedStorage").Functions.Request:InvokeServer(table.unpack({"CraftAll",{},}))
        end
      end,	    
    })


function hatch(name, mode)
local args = {
    [1] = name,
    [2] = mode
}
game:GetService("ReplicatedStorage").Functions.Unbox:InvokeServer(unpack(args))
  end

local EggTable = {}
local Eggs = game:GetService("Workspace").Scripts.Eggs

for _,v in next, Eggs:GetChildren() do
    table.insert(EggTable, v.Name)
end

local eggchoice;
local EggChoice = Tab3:CreateDropdown({
  Name = "Eggs",
  Options = EggTable,
  CurrentOption = "Select Amount",
  Flag = "Egg Choice",
  Callback = function(PetChoice)
eggchoice = PetChoice
  end    
})	

local SelectedMode;
local SelectMode = Tab3:CreateDropdown({
  Name = "Select The Mode",
  Options = {"Single", "Triple"},
  CurrentOption = "Select Mode",
  Flag = "Mode Choice",
  Callback = function(Option)
SelectedMode = Option
    end    
})

local AutoHatch = Tab3:CreateToggle({
  Name = "Auto Egg",
  CurrentValue = false,
  Flag = "Auto Hatch Now",
  Callback = function(Value)
    getgenv().autohatch = Value 
while getgenv().autohatch == true do 
hatch(eggchoice, SelectedMode)
        end
    end	    
})

local EggCombo = Tab3:CreateLabel(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.EggCombo.Text)


spawn(function()
    while true do wait()
    EggCombo:Set(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.EggCombo.Text)
    end
    end)

---------------------------------------------------------------------------


local Player = Tab4:CreateSection("Player Miscs")

local Slider = Tab4:CreateSlider({
  Name = "Walk Speed",
  Range = {16, 400},
  Increment = 1,
  Suffix = "Speed",
  CurrentValue = 24,
  Flag = "Slider1", 
  Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
  end,
})

--Slider:Set(48) 

local Slider2 = Tab4:CreateSlider({
  Name = "Gravity",
  Range = {1, 400},
  Increment = 1,
  Suffix = "Gravity",
  CurrentValue = 196,
  Flag = "Gravity", 
  Callback = function(Value)
      game.Workspace.Gravity = Value
  end,
})

--Slider2:Set(196) 

local Slider3 = Tab4:CreateSlider({
  Name = "FOV",
  Range = {10, 120},
  Increment = 1,
  Suffix = "Fov",
  CurrentValue = 70,
  Flag = "Fov", 
  Callback = function(Value)
      game:GetService'Workspace'.Camera.FieldOfView = Value
  end,
})

--Slider3:Set(70) 


local GameMisc = Tab4:CreateSection("Game Miscs")

local Unlock = Tab4:CreateButton({
  Name = "Unlock All Worlds",
  Callback = function()
    for i, v in pairs(game:GetDescendants()) do
      if v.Name =="Unlocked" then
         v.Value = "true"
      end
    end
    
      for i, v in pairs(game:GetDescendants(game:GetService("Workspace").Scripts.Portals)) do
      if v.Name =="LabelUI" then
         v:Destroy()
      end
    end
  end,
})


local GetChests = Tab4:CreateButton({
  Name = "Collect All Chests",
  Callback = function()
    game:GetService("Players").LocalPlayer.Passes.AutoChestCollect.Value = true
    wait(10)
    game:GetService("Players").LocalPlayer.Passes.AutoChestCollect.Value = false
  end,
})


local GetPass = Tab4:CreateButton({
  Name = "Get Some Gamepass",
  Callback = function()

    game:GetService("Players").LocalPlayer.Passes.AutoClicker.Value = true
    game:GetService("Players").LocalPlayer.Passes.AutoRebirth.Value = true
    game:GetService("Players").LocalPlayer.SpaceUpgrades.Teleport.Value = 1
    game:GetService("Players").LocalPlayer.Upgrades.FreeAutoClicker.Value = 1
    game:GetService("Players").LocalPlayer.Upgrades.FasterFreeAutoClicker.Value = 6
  end,
})

local GetPassNote = Tab4:CreateLabel("Gets Auto Clicker, Auto Rebirth, Teleport + Auto Upgrades Them To Max")



local ClaimDailySpin = Tab4:CreateButton({
  Name = "Auto Daily Spin",
  Callback = function()
game:GetService("ReplicatedStorage").Functions.Spin:InvokeServer()
  end,
})

local WhiteScreen = Tab4:CreateToggle({
  Name = "White Screen [ CPU Saver ]",
  CurrentValue = false,
  Flag = "WhiteScreen", 
  Callback = function(Value)
    getgenv().Toggle = Value
    while getgenv().Toggle == true do wait()
            if getgenv().Toggle == true then
        game:GetService("RunService"):Set3dRenderingEnabled(false)
        setfpscap(10)
      else 
        game:GetService("RunService"):Set3dRenderingEnabled(true)
        setfpscap(360)
      end
    end
  end,
})

WhiteScreen:Set(false)

local Destroy = Tab4:CreateButton({
  Name = "Destroy UI",  
  Callback = function()
    Rayfield:Notify({
      Title = "Kylee's Hub",
      Content = "Are You Sure You Want To Destroy UI?",
      Duration = 0.3,
      Image = 4838075912,
      Actions = { 
         Ignore = {
          Name = "No",
          Callback = function()
         end
      },
      Yes = {
       Name = "Yes, Destroy!",
       Callback = function()
        local prompt = getrenv().require(game.CoreGui.RobloxGui.Modules.ErrorPrompt).new("Default")
        prompt._hideErrorCode = true
        local Blur = Instance.new("BlurEffect")
        Blur.Parent = game.Lighting
        local gui = Instance.new("ScreenGui", game.CoreGui)
        prompt:setParent(gui)
        prompt:setErrorTitle('Destroying....')
        prompt:_open('This Notification Will Automatically Close When Done Disabling Script Features')
        WhiteScreen:Set(false)
        CollectCupcakes:Set(false)
        EventUpgrader:Set(false)
        ToggleAuto:Set(false)
        ToggleHighest:Set(false)
        Craft:Set(false)
        AutoHatch:Set(false)
        Slider:Set(48) 
        Slider2:Set(196) 
        Slider3:Set(70) 
        Rayfield:Destroy()
        Blur:Destroy()
        prompt:_close()
      end
     },
     },
     })
  end,
})

local DestroyLabel = Tab4:CreateLabel("Destroy UI Disables Script Features Before Destroying")

local Server Misc = Tab4:CreateSection("Server Miscs")

local Rejoins Server = Tab4:CreateButton({
  Name = "Rejoin",
  Callback = function()
    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
  end,
})

local LabelHop = Tab4:CreateLabel("Lower Server Hop Taken From V3rm. Credits to owner")

local Lower Server = Tab4:CreateButton({
  Name = "Hop To Lower Player",
  Callback = function()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    local File = pcall(function()
      AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
    end)
    if not File then
      table.insert(AllIDs, actualHour)
      writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
    end
    function TPReturner()
      local Site;
      if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
      else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
      end
      local ID = ""
      if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
      end
      local num = 0;
      for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
          for _,Existing in pairs(AllIDs) do
            if num ~= 0 then
              if ID == tostring(Existing) then
                Possible = false
              end
            else
              if tonumber(actualHour) ~= tonumber(Existing) then
                local delFile = pcall(function()
                  delfile("NotSameServers.json")
                  AllIDs = {}
                  table.insert(AllIDs, actualHour)
                end)
              end
            end
            num = num + 1
          end
          if Possible == true then
            table.insert(AllIDs, ID)
            wait()
            pcall(function()
              writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
              wait()
              game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
            end)
            wait(8)
          end
        end
      end
    end
    
    function Teleport()
      while wait() do
        pcall(function()
          TPReturner()
          if foundAnything ~= "" then
            TPReturner()
          end
        end)
      end
    end
    Teleport()
  end,
})

for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    v:Disable()
    end
    
local Status = Tab5:CreateSection("General Information!")

local Minimize = Tab5:CreateLabel("Right Shift To Hide Gui")
    
local info = Tab5:CreateLabel("Scroll On Top Of The Tab Sections To See The Full Script")
    
    local Discord = Tab5:CreateButton({
       Name = "Click To Join Discord",
       Callback = function()
       setclipboard("https://discord.gg/P2RbCv2A9N")
        Rayfield:Notify({
        Title = "Kylee's Hub",
        Content = "Discord Link Copied To Clipboard",
        Image = 4838075912,
        Duration = 0.5
        })
       end,
    })

  local LabelAFK = Tab5:CreateLabel("Anti AFK Is Always Active")

    
    
    Rayfield:Notify({
        Title = "Kylee's Hub",
        Content = "Loaded",
      Image = 4838075912,
        Duration = 0.5
    })
